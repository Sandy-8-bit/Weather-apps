[
  {
    "ContainingType": "WeatherApp.Controllers.AuthController",
    "Method": "GetCurrentUser",
    "RelativePath": "api/auth/current-user",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WeatherApp.Controllers.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.AuthController",
    "Method": "RecoverPassword",
    "RelativePath": "api/auth/recover-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WeatherApp.Controllers.RecoverPasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WeatherApp.Controllers.RegisterRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.FavoritesController",
    "Method": "GetFavorites",
    "RelativePath": "api/favorites",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[FavoriteCity, BlazorApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.Controllers.FavoritesController",
    "Method": "AddFavoriteCityAsync",
    "RelativePath": "api/favorites/{city}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.FavoritesController",
    "Method": "RemoveFavoriteCity",
    "RelativePath": "api/favorites/{city}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.FavoritesController",
    "Method": "SetHomeCity",
    "RelativePath": "api/favorites/{city}/home",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.FavoritesController",
    "Method": "GetHomeCity",
    "RelativePath": "api/favorites/home",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "FavoriteCity",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.Controllers.FavoritesController",
    "Method": "RemoveHomeCity",
    "RelativePath": "api/favorites/home",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "GeminiChatController",
    "Method": "GetChatbotResponse",
    "RelativePath": "api/geminichat",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "ChatRequestt",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeatherController",
    "Method": "GetWeather",
    "RelativePath": "api/weather/{city}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BlazorWasmApp.Models.WeatherResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeatherController",
    "Method": "GetFiveDayForecast",
    "RelativePath": "api/weather/{city}/forecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BlazorWasmApp.Models.ForecastResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeatherController",
    "Method": "ClearCache",
    "RelativePath": "api/weather/cache",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeatherController",
    "Method": "GetWeatherByCoordinates",
    "RelativePath": "api/weather/coordinates",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "latitude",
        "Type": "System.Double",
        "IsRequired": false
      },
      {
        "Name": "longitude",
        "Type": "System.Double",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BlazorWasmApp.Models.WeatherResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeatherController",
    "Method": "AddToFavorites",
    "RelativePath": "api/weather/favorites/{city}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeatherController",
    "Method": "RemoveFromFavorites",
    "RelativePath": "api/weather/favorites/{city}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeatherController",
    "Method": "IsCityInFavorites",
    "RelativePath": "api/weather/favorites/{city}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeatherController",
    "Method": "GetWeatherFromFavoriteCity",
    "RelativePath": "api/weather/favorites/{city}/weather",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "city",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "BlazorWasmApp.Models.WeatherResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "WeatherApp.Controllers.WeatherController",
    "Method": "SendRainNotificationEmail",
    "RelativePath": "api/weather/send-rain-notification",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "WeatherApp.Services.RainNotificationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "WeatherChatController",
    "Method": "GetChatbotResponse",
    "RelativePath": "api/weatherchat",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "ChatRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]